@inject Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader
<Router AppAssembly="@typeof(App).Assembly" PreferExactMatches="@true" OnNavigateAsync="OnNavigateAsync" AdditionalAssemblies="@asmList">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code{
    private List<System.Reflection.Assembly> asmList = new List<System.Reflection.Assembly>();
    
    private async Task OnNavigateAsync(NavigationContext context)
    {
        if (context.Path.Contains("Categories")) // Url of the page that needs the lazy loaded assembly
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "LinkStore.Category.dll", "LinkStore.Links.dll" });
            asmList.AddRange(assemblies);
        }
    }

}