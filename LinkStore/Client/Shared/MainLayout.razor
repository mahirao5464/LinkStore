@inherits LayoutComponentBase

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() =>OpenMenu=!OpenMenu )" />
        LinkStore
    </MudAppBar>
    <MudDrawer @bind-Open="@OpenMenu" Elevation="0" Variant="@DrawerVariant.Persistent" Color="Color.Primary">
        <MudDrawerHeader>
                <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Store"/>LinkStore</MudText>
        </MudDrawerHeader>
        <MudDivider Class="my-2" />
        <NavMenu/>
    </MudDrawer>
   <MudMainContent>
       @Body
   </MudMainContent>
</MudLayout>
@code
{
    bool OpenMenu = true;

    string AlertAssignmentIcon { get; set; } = "<path d=\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H9.18C9.6,1.84 10.7,1 12,1C13.3,1 14.4,1.84 14.82,3H19M12,3A1,1 0 0,0 11,4A1,1 0 0,0 12,5A1,1 0 0,0 13,4A1,1 0 0,0 12,3M7,7V5H5V19H19V5H17V7H7M11,9H13V13.5H11V9M11,15H13V17H11V15Z\" />";
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine(firstRender);
        return base.OnAfterRenderAsync(firstRender);
    }
}